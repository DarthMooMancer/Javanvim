{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Polydev","text":""},{"location":"#what-is-polydev","title":"What is Polydev?","text":"<p>Polydev is a simple plugin that gives neovim some nice functions while being extremely extensible for developers. It automatically detects your language and enables the module for that language. It is a standalone plugin that has no dependencies aside from getting file types. Below are a few features that are currently implemented:</p> <ul> <li>Creating New Projects</li> <li>Creating New Files</li> <li>Building Files</li> <li>Running Files</li> <li>Builtin Terminal</li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/#lazyvim-and-config","title":"Lazyvim and Config","text":"<pre><code>-- There is no need to copy this. This is an example and it consists of the defaults. This is a java example\nrequire {\n  \"DarthMooMancer/Polydev\",\n  config = function()\n    require(\"Polydev\").java.setup({\n      project_root = \"~/projects\",\n      keybinds = {\n        [\"&lt;Esc&gt;\"] = \"CloseTerminal\",\n        [\"&lt;leader&gt;jb\"] = \"JavaBuild\",\n        [\"&lt;leader&gt;jr\"] = \"JavaRun\",\n        [\"&lt;leader&gt;nf\"] = \"NewJavaFile\",\n        [\"&lt;leader&gt;np\"] = \"NewJavaProject\",\n      },\n      terminal = {\n        right_padding = 0,\n        bottom_padding = 0,\n        left_padding = 0,\n        top_padding = 0,\n        border = true,\n        number = true,\n        relativenumber = true,\n        scroll = true,\n      }\n    })\n  end\n}\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>!!! Polydev can be installed with any plugin installer or manually. These are just examples.</p> <ul> <li>Side note: A lot of the languages require a .polydev file. If you dont have it in a language that needs it, it will error out and yell at you."},{"location":"installation/#lazyvim","title":"Lazyvim","text":"<pre><code>require {\n  \"DarthMooMancer/Polydev\",\n  config = function()\n    require(\"Polydev\").setup()\n    --require(\"Polydev\").language.setup({\n        -- configs\n      --})\n  end\n}\n</code></pre>"},{"location":"installation/#minideps","title":"Mini.Deps","text":"<pre><code>MiniDeps.add({\n  source = 'DarthMooMancer/Polydev',\n})\n\nrequire(\"Polydev\").setup()\n--require(\"Polydev\").language.setup({\n  -- configs\n--})\n</code></pre>"},{"location":"setup/","title":"Setup and Customizing","text":""},{"location":"setup/#project-name","title":"Project Name","text":"<pre><code>require(\"Polydev\").language.setup({\n  project_root = \"~/Home/...\" -- Default: ~/Projects/Language\n})\n</code></pre> <ul> <li>You can change the default directory for the project. The project can be made from anywhere you want.</li> <li>It will automatically make the new Root Directory, so you don't have to worry about making it.</li> </ul>"},{"location":"setup/#keybinds","title":"Keybinds","text":"<ul> <li>Every language has the same keybinds so it is easy to remember keybinds and not have to remember thousands of keybinds.</li> <li>The only keybind that doesnt change no matter what happens is creating a new project. Enter the language you want, then enter the project name and boom! new project. <pre><code>require(\"Polydev\"}.language.setup({\n  keybinds = [\n    [\"&lt;Esc&gt;\"] = \"CloseTerminal\",\n    [\"&lt;leader&gt;pb\"] = \"languageBuild\",\n    [\"&lt;leader&gt;pr\"] = \"languageRun\",\n    [\"&lt;leader&gt;nf\"] = \"NewlanguageFile\", -- such as .c files\n    [\"&lt;leader&gt;nh\"] = \"Newlanguage_secondaryFile\", -- such as .h files\n  }\n})\n</code></pre></li> </ul>"},{"location":"setup/#terminal","title":"Terminal","text":"<ul> <li>The terminal has a couple of options that can be customized and with more to come<ul> <li>Each is set to 0 by default<ul> <li>right_padding: Padding for the right width of the terminal</li> <li>left_padding: Padding for the left width of the terminal</li> <li>top_padding: Padding for the top height of the terminal</li> <li>bottom_padding: Padding for the bottom padding of the terminal</li> </ul> </li> <li>Each is enabled by default<ul> <li>border: Adds a rounded border to the window</li> <li>number: Adds numbers to side of terminal</li> <li>relativenumber: Relative numbers indicate distances from the cursor, only works if number is enabled</li> <li>scroll: Allows scrolling in terminal</li> </ul> </li> </ul> </li> </ul> <pre><code>-- These are just defaults, so no need to copy them\nrequire(\"Polydev\").language.setup({\n  terminal = {\n    right_padding = 0,\n    bottom_padding = 0,\n    left_padding = 0,\n    top_padding = 0,\n    border = true,\n    number = true,\n    relativenumber = true,\n    scroll = true,\n  }\n})\n</code></pre>"},{"location":"languages/c/","title":"C","text":""},{"location":"languages/c/#key-notes","title":"Key Notes","text":"<ul> <li>Currently with the way I have it work, the first time you build a project, it will error out no matter what. Just rerun the build and then if there are errors it is most likely a you issue more than a me issue.</li> </ul>"},{"location":"languages/c/#keybinds","title":"Keybinds","text":"<pre><code>require(\"Polydev\").c.setup({\n  keybinds = {\n    [\"&lt;Esc&gt;\"] = \"CloseTerminal\" -- Closes terminal, esc by default. \n    [\"&lt;leader&gt;pb\"] = \"CBuild\", -- Building all C Files in src directory in.\n    [\"&lt;leader&gt;pr\"] = \"CRun\", -- Runs &lt;Project_name&gt; in your build directory \n    [\"&lt;leader&gt;nf\"] = \"NewCFile\", -- Creates a new c file in the current project src folder\n    [\"&lt;leader&gt;nh\"] = \"NewCHeaderFile\", -- Creates a new header file in the current project src folder\n})\n</code></pre>"},{"location":"languages/c/#file-structure","title":"File Structure","text":"<pre><code>Projects/\n\u2514\u2500\u2500 C/\n    \u2514\u2500\u2500 Project_Name/\n        \u251c\u2500\u2500 CMakeLists.txt\n        \u251c\u2500\u2500 src/\n        \u2502   \u251c\u2500\u2500 main.c\n        \u2502   \u2514\u2500\u2500 *.c\n        \u251c\u2500\u2500 build/\n        \u2502   \u2514\u2500\u2500 &lt;project_name&gt;.polydev\n        \u2514\u2500\u2500 include/\n            \u2514\u2500\u2500 *.h\n</code></pre>"},{"location":"languages/java/","title":"Java","text":""},{"location":"languages/java/#keybinds","title":"Keybinds","text":"<pre><code>-- These are defaults, so no need to copy them\nrequire(\"Polydev\").java.setup({\n  keybinds = {\n    [\"&lt;Esc&gt;\"] = \"CloseTerminal\" -- Closes terminal, esc by default.\n    [\"&lt;leader&gt;pb\"] = \"JavaBuild\" -- Building all Java Files in src directory in.\n    [\"&lt;leader&gt;pr\"] = \"JavaRun\" -- Runs Main.java in the out folder in your project_root\n    [\"&lt;leader&gt;nf\"] = \"NewJavaFile\" -- Creates a new Java file in the current project src folder\n  }\n})\n</code></pre>"},{"location":"languages/java/#file-structure","title":"File Structure","text":"<pre><code>Projects/\n\u2514\u2500\u2500 Java/\n    \u2514\u2500\u2500 Project_Name/\n        \u251c\u2500\u2500 src/\n        \u2502   \u2514\u2500\u2500 Main.java\n        \u2514\u2500\u2500 build/\n            \u2514\u2500\u2500 *.class\n</code></pre>"},{"location":"languages/lua/","title":"Lua","text":""},{"location":"languages/lua/#keybinds","title":"Keybinds","text":"<pre><code>-- These are the defaults for lua\nrequire(\"Polydev\").lua.setup({\n    keybinds = {\n        [\"&lt;Esc&gt;\"] = \"CloseTerminal\",\n        [\"&lt;leader&gt;pr\"] = \"LuaRun\",\n        [\"&lt;leader&gt;nf\"] = \"NewLuaFile\",\n    }\n})\n</code></pre>"},{"location":"languages/lua/#file-structure","title":"File Structure","text":"<pre><code>Projects/\n\u2514\u2500\u2500 Lua/\n    \u2514\u2500\u2500 Project_Name/\n        \u251c\u2500\u2500 &lt;Project_name&gt;.polydev\n        \u2514\u2500\u2500 lua/\n            \u2514\u2500\u2500 Project_name/\n                \u2514\u2500\u2500 init.lua\n</code></pre>"},{"location":"languages/python/","title":"Python","text":""},{"location":"languages/python/#keybinds","title":"Keybinds","text":"<pre><code>require(\"Polydev\").python.setup({\n  keybinds = {\n    [\"&lt;Esc&gt;\"] = \"CloseTerminal\",\n    [\"&lt;leader&gt;pr\"] = \"PythonRun\",\n    [\"&lt;leader&gt;nf\"] = \"NewPythonFile\",\n    [\"&lt;leader&gt;pb\"] = \"PythonPip\"\n  }\n})\n</code></pre>"},{"location":"languages/python/#python-features","title":"Python Features","text":"<ul> <li>A feature that is added to the python language for this plugin is to be able to install dependencies with pip within the terminal. You can even update pip. Just type your dependency you want and boom it is installed or not depending on if python likes you.</li> </ul>"},{"location":"languages/python/#file-structure","title":"File Structure","text":"<pre><code>Projects/\n\u2514\u2500\u2500 Python/\n    \u2514\u2500\u2500 Project_Name/\n        \u251c\u2500\u2500 main.py\n        \u251c\u2500\u2500 requirements.txt\n        \u251c\u2500\u2500 setup.py\n        \u251c\u2500\u2500 tests/\n        \u2514\u2500\u2500 venv/\n</code></pre>"}]}